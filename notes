Mon Jan 30 18:53:16 UTC 2012

	generated instance match:

		struct ... ivs;

		if eol && prefix_recurse
			foreach ivs
				recurse(ivs)
			return

		if eol && pfx=help:
			recurse(NULL)
			return

		if eol
			error

		fill ivs from args
		error if insufficient args
		look up ivs
		if not found
			ptr = $func
			if ptr == NULL
				error
			insert new ivs
		recurse(ivs)

	in above "recurse" == do_BRANCH
				

Mon Jan 30 18:53:16 UTC 2012

	static int
	match_foo(struct clikit_context *cc)
	{
		if (strcmp(cc->ap, "foo"))
			return (0);
		cc->ap++;
		if (cc->ap != NULL) {
			clikit_error("junk at end of line");
			return (-1);
		} 
		do_foo(cc);
		return (0);
	}

	static int
	match_things(struct clikit_context *cc)
	{
		unsigned id;
		int retval;

		if (strcmp(cc->ap, "things"))
			return (0);
		cc->ap++;
		if (clikit_getuint(cc, &id))
			return (-1);
		clikit_push_instance(cc);
		if (things_instance(cc, id)) 
			retval = -1;
		else if (cc->ap == NULL)
			retval = 0;
		if (!match_things_this(cc))
			retval = 0;
		else if (!match_things_that(cc))
			retval = 0;
		else if (!match_things_junk(cc))
			retval = 0;
		else {
			clikit_error("unknown '%s'", cp->ap);
			retval = -1;
		}
		clikit_pop_instance(cc);
	}

Mon Jan 30 18:53:16 UTC 2012

<< foo
...
foo

types like REAL optional


Sun Jan 29 21:32:27 UTC 2012

CLI commands are a tree

Nodes are added/removed on the fly

Pagination ?

Prefixes are exclusive:
	show
	help
	enable
	disable
	no
	del
	etc.

Suffix '?' == help prefix

Instances
	by name/number
	subject to approval

Types:
	WORD
	STRING
	INT
	UINT
	REAL
	ENUM { word ... }

API:
	struct clik * Cfk_New(void);
	int Cfk_Destroy(struct clik *);
	int Cfk_ErrorHandling(?);

	int Cfk_Add_Pfx(struct clik *, const char *pfx, unsigned val);
	int Cfk_Del_Pfx(struct clik *, const char *pfx);

	int Cfk_Add_Tree(struct clik *, struct cfgtree *);
	int Cfk_Del_Tree(struct clik *, struct cfgtree *);

	struct clik * Cfk_New_Context(struct clik *);
	int Cfk_Del_Context(struct clik *);
	XXX: output handler
	XXX: input handler

Tree BNF:
	tree:
		leaf
		| tree leaf
	
	leaf:
		instance
		| word

	instance:
		"BRANCH" name type '{' ispec tree '}'

	ispec:
		'desc' STRING
		'func' name

	word:
		"WORD" name type* '{' wspec '}'

	wspec:
		'desc' STRING
		'func' name
		'default' '{' type_val ... '}'

Instance function:
	int ifunc(struct cfgctx *, unsigned pfx, TYPE i, void **priv);
		"new", "del" etc are prefixes	
		if *priv != NULL, instance exists
		if *priv == NULL, instance does not exist

Word function:
	int wfunc(struct cfgctx *, unsigned pfx, void *priv, TYPE ...);

Implementation:

	Python script: CLIkit

		CLIkit --code -o clikit [opts]
			Emit the central code to clikit.[ch]
			opts:
				--threaded
		CLIkit --tree foo.clikit [opts]
			compile foo.clikit to foo.c and foo.h

